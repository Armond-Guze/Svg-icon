AS a freelance web developer
I WANT to generate a simple logo for my projects
SO THAT I don't have to pay a graphic designer

GIVEN a command-line application that accepts user input
WHEN I am prompted for text
THEN I can enter up to three characters
WHEN I am prompted for the text color
THEN I can enter a color keyword (OR a hexadecimal number)
WHEN I am prompted for a shape
THEN I am presented with a list of shapes to choose from: circle, triangle, and square
WHEN I am prompted for the shape's color
THEN I can enter a color keyword (OR a hexadecimal number)
WHEN I have entered input for all the prompts
THEN an SVG file is created named `logo.svg`
AND the output text "Generated logo.svg" is printed in the command line
WHEN I open the `logo.svg` file in a browser
THEN I am shown a 300x200 pixel image that matches the criteria I entered


Grading Requirements

Note: If a Challenge assignment submission is marked as “0”, it is considered incomplete and will not count towards your graduation requirements. Examples of incomplete submissions include the following:

A repository that has no code

A repository that includes a unique name but nothing else

A repository that includes only a README file but nothing else

A repository that only includes starter code
This Challenge is graded based on the following criteria:

Deliverables: 15%

At least one sample SVG file generated using the application must be submitted.

Your GitHub repository containing your application code.

Walkthrough Video: 32%

A walkthrough video that demonstrates the functionality of the SVG logo maker and passing tests must be submitted.

The README.md file must include a link to the walkthrough video.

The walkthrough video must show all tests passing from the command line.

The walkthrough video must demonstrate how a user would invoke the application from the command line.

The walkthrough video must demonstrate how a user would enter responses to all of the prompts in the application.

The walkthrough video must demonstrate a generated SVG file, showing the file being opened in the browser. The image in the browser must reflect the choices made by the user (text, shape, and colors).

Technical Acceptance Criteria: 40%

Satisfies all of the preceding acceptance criteria plus the following:

Uses the Inquirer package.

Uses the Jest package for a suite of unit tests.

The application must have Triangle, Square, and Circle classes.

Repository Quality: 13%

Repository has a unique name.

Repository follows best practices for file structure and naming conventions.

Repository follows best practices for class/id naming conventions, indentation, quality comments, etc.

Repository contains multiple descriptive commit messages.

Repository contains a high-quality readme with description and a link to a walkthrough video.

Review
You are required to submit the following for review:

A walkthrough video that demonstrates the functionality of the application and passing tests.

At least one sample SVG file generated using your application.

The URL of the GitHub repository, with a unique name and a README describing the project.
